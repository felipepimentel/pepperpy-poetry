{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Pepperpy Poetry Plugin","text":"<p>A Poetry plugin for shared configuration management across multiple projects in the pepperpy ecosystem.</p>"},{"location":"#overview","title":"Overview","text":"<p>The Pepperpy Poetry Plugin is designed to simplify configuration management across multiple Python projects. It allows you to maintain a single source of truth for common configuration settings, ensuring consistency across your entire project ecosystem.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Shared Configuration Management: Automatically merge shared configurations from <code>shared-config.toml</code> into your project's <code>pyproject.toml</code></li> <li>Flexible Configuration: Support for any TOML configuration sections</li> <li>User-Friendly: Clear console feedback during configuration merging</li> <li>Error Handling: Graceful handling of missing configuration files and errors</li> </ul>"},{"location":"#quick-example","title":"Quick Example","text":"<ol> <li>Create a <code>shared-config.toml</code> in your project root:</li> </ol> <pre><code>[tool.ruff]\nline-length = 88\ntarget-version = \"py312\"\nextend-exclude = [\n    \".pytest_cache\",\n    \".ruff_cache\",\n    \".venv\",\n    \".git\",\n    \"__pycache__\"\n]\n\n[tool.mypy]\npython_version = \"3.12\"\nstrict = true\nwarn_return_any = true\nwarn_unused_configs = true\n</code></pre> <ol> <li>The plugin will automatically merge these configurations into your project's <code>pyproject.toml</code> when Poetry runs.</li> </ol>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Check out our Quick Start Guide to begin using the plugin in your projects.</p>"}]}